"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/graphql";
exports.ids = ["pages/api/graphql"];
exports.modules = {

/***/ "@as-integrations/next":
/*!****************************************!*\
  !*** external "@as-integrations/next" ***!
  \****************************************/
/***/ ((module) => {

module.exports = require("@as-integrations/next");

/***/ }),

/***/ "fs-extra":
/*!***************************!*\
  !*** external "fs-extra" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("fs-extra");

/***/ }),

/***/ "graphql-tag":
/*!******************************!*\
  !*** external "graphql-tag" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("graphql-tag");

/***/ }),

/***/ "gray-matter":
/*!******************************!*\
  !*** external "gray-matter" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("gray-matter");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "@apollo/server":
/*!*********************************!*\
  !*** external "@apollo/server" ***!
  \*********************************/
/***/ ((module) => {

module.exports = import("@apollo/server");;

/***/ }),

/***/ "glob":
/*!***********************!*\
  !*** external "glob" ***!
  \***********************/
/***/ ((module) => {

module.exports = import("glob");;

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fgraphql&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Fgraphql.ts&middlewareConfigBase64=e30%3D!":
/*!**************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fgraphql&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Fgraphql.ts&middlewareConfigBase64=e30%3D! ***!
  \**************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(api)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _src_pages_api_graphql_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/pages/api/graphql.ts */ \"(api)/./src/pages/api/graphql.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_src_pages_api_graphql_ts__WEBPACK_IMPORTED_MODULE_3__]);\n_src_pages_api_graphql_ts__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_graphql_ts__WEBPACK_IMPORTED_MODULE_3__, 'default'));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_graphql_ts__WEBPACK_IMPORTED_MODULE_3__, 'config');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/graphql\",\n        pathname: \"/api/graphql\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    userland: _src_pages_api_graphql_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRmdyYXBocWwmcHJlZmVycmVkUmVnaW9uPSZhYnNvbHV0ZVBhZ2VQYXRoPS4lMkZzcmMlMkZwYWdlcyUyRmFwaSUyRmdyYXBocWwudHMmbWlkZGxld2FyZUNvbmZpZ0Jhc2U2ND1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQStGO0FBQ3ZDO0FBQ0U7QUFDMUQ7QUFDdUQ7QUFDdkQ7QUFDQSxpRUFBZSx3RUFBSyxDQUFDLHNEQUFRLFlBQVksRUFBQztBQUMxQztBQUNPLGVBQWUsd0VBQUssQ0FBQyxzREFBUTtBQUNwQztBQUNPLHdCQUF3Qix5R0FBbUI7QUFDbEQ7QUFDQSxjQUFjLGtFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsWUFBWTtBQUNaLENBQUM7O0FBRUQscUMiLCJzb3VyY2VzIjpbIiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQYWdlc0FQSVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUtbW9kdWxlcy9wYWdlcy1hcGkvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBob2lzdCB9IGZyb20gXCJuZXh0L2Rpc3QvYnVpbGQvdGVtcGxhdGVzL2hlbHBlcnNcIjtcbi8vIEltcG9ydCB0aGUgdXNlcmxhbmQgY29kZS5cbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIuL3NyYy9wYWdlcy9hcGkvZ3JhcGhxbC50c1wiO1xuLy8gUmUtZXhwb3J0IHRoZSBoYW5kbGVyIChzaG91bGQgYmUgdGhlIGRlZmF1bHQgZXhwb3J0KS5cbmV4cG9ydCBkZWZhdWx0IGhvaXN0KHVzZXJsYW5kLCAnZGVmYXVsdCcpO1xuLy8gUmUtZXhwb3J0IGNvbmZpZy5cbmV4cG9ydCBjb25zdCBjb25maWcgPSBob2lzdCh1c2VybGFuZCwgJ2NvbmZpZycpO1xuLy8gQ3JlYXRlIGFuZCBleHBvcnQgdGhlIHJvdXRlIG1vZHVsZSB0aGF0IHdpbGwgYmUgY29uc3VtZWQuXG5leHBvcnQgY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgUGFnZXNBUElSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuUEFHRVNfQVBJLFxuICAgICAgICBwYWdlOiBcIi9hcGkvZ3JhcGhxbFwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL2dyYXBocWxcIixcbiAgICAgICAgLy8gVGhlIGZvbGxvd2luZyBhcmVuJ3QgdXNlZCBpbiBwcm9kdWN0aW9uLlxuICAgICAgICBidW5kbGVQYXRoOiAnJyxcbiAgICAgICAgZmlsZW5hbWU6ICcnXG4gICAgfSxcbiAgICB1c2VybGFuZFxufSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhZ2VzLWFwaS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fgraphql&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Fgraphql.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./src/lib/posts.ts":
/*!**************************!*\
  !*** ./src/lib/posts.ts ***!
  \**************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAllPosts: () => (/* binding */ getAllPosts)\n/* harmony export */ });\n/* harmony import */ var fs_extra__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs-extra */ \"fs-extra\");\n/* harmony import */ var fs_extra__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fs_extra__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var glob__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! glob */ \"glob\");\n/* harmony import */ var gray_matter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! gray-matter */ \"gray-matter\");\n/* harmony import */ var gray_matter__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(gray_matter__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_3__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([glob__WEBPACK_IMPORTED_MODULE_1__]);\nglob__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\nfunction normalizeDate(date) {\n    try {\n        return new Date(date).toISOString();\n    } catch (error) {\n        console.error('Date normalization error:', date, error);\n        return date;\n    }\n}\nasync function markdownToHtml(markdown, postPath) {\n    const processImagePaths = (content)=>{\n        return content.replace(/!\\[([^\\]]*)\\]\\(([^)]+)\\)/g, (match, alt, imagePath)=>{\n            // 디버깅을 위한 로그\n            console.log('Processing image path:', {\n                original: imagePath.trim(),\n                postPath\n            });\n            // 외부 URL인 경우 그대로 반환\n            if (imagePath.trim().startsWith('http')) {\n                return match;\n            }\n            // 이미지 경로 정규화\n            const normalizedPath = imagePath.trim().replace(/^\\.?\\/?(images\\/)?/, '');\n            // 포스트 경로에서 파일명을 제외한 디렉토리 경로만 사용\n            const postDir = postPath.split('/').slice(0, -1).join('/');\n            const absoluteImagePath = `/posts/${postDir}/images/${normalizedPath}`;\n            console.log('Converted path:', absoluteImagePath);\n            return `![${alt}](${absoluteImagePath})`;\n        });\n    };\n    // 마크다운 내용에서 이미지 경로 처리\n    const processedContent = processImagePaths(markdown);\n    return processedContent;\n}\nasync function getAllPosts() {\n    const postsDirectory = path__WEBPACK_IMPORTED_MODULE_3___default().join(process.cwd(), '_posts');\n    //   console.log('Posts directory:', postsDirectory)\n    try {\n        const exists = await fs_extra__WEBPACK_IMPORTED_MODULE_0___default().pathExists(postsDirectory);\n        if (!exists) {\n            throw new Error('_posts directory not found');\n        }\n        // 디렉토리 내용 확인\n        const dirContents = await fs_extra__WEBPACK_IMPORTED_MODULE_0___default().readdir(postsDirectory);\n    //     console.log('Directory contents:', dirContents)\n    } catch (error) {\n        console.error('Error accessing _posts directory:', error);\n        return [];\n    }\n    // glob 패턴 수정 및 옵션 추가\n    const postPaths = await (0,glob__WEBPACK_IMPORTED_MODULE_1__.glob)('**/*.md', {\n        cwd: postsDirectory,\n        absolute: false,\n        ignore: [\n            'node_modules/**',\n            '.next/**'\n        ],\n        nodir: true,\n        dot: false\n    });\n    //   console.log('Found markdown files:', postPaths)\n    if (postPaths.length === 0) {\n        console.warn('No markdown files found in _posts directory');\n        return [];\n    }\n    const posts = await Promise.all(postPaths.map(async (postPath)=>{\n        const fullPath = path__WEBPACK_IMPORTED_MODULE_3___default().join(postsDirectory, postPath);\n        try {\n            const fileContents = await fs_extra__WEBPACK_IMPORTED_MODULE_0___default().readFile(fullPath, 'utf8');\n            const { data, content, excerpt } = gray_matter__WEBPACK_IMPORTED_MODULE_2___default()(fileContents);\n            // 포스트 경로 로깅\n            // console.log('Processing post:', {\n            //   path: postPath,\n            //   title: data.title\n            // })\n            // postPath를 전달하여 이미지 경로 처리\n            const processedContent = await markdownToHtml(content, postPath);\n            return {\n                excerpt: excerpt || '',\n                fields: {\n                    slug: postPath.replace(/\\.md$/, '')\n                },\n                frontmatter: {\n                    date: normalizeDate(data.date),\n                    title: data.title,\n                    tags: data.tags || [],\n                    featuredImage: data.featuredImage || null,\n                    category: data.category || null\n                },\n                rawMarkdownBody: processedContent // 처리된 마크다운 내용 사용\n            };\n        } catch (error) {\n            console.error(`Error processing file ${fullPath}:`, error);\n            return null;\n        }\n    }));\n    // 에러가 있는 포스트 제거\n    const validPosts = posts.filter((post)=>post !== null);\n    //   console.log('Total valid posts:', validPosts.length)\n    return validPosts.sort((a, b)=>{\n        const dateA = new Date(a.frontmatter.date);\n        const dateB = new Date(b.frontmatter.date);\n        return dateB.getTime() - dateA.getTime();\n    });\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/lib/posts.ts\n");

/***/ }),

/***/ "(api)/./src/pages/api/graphql.ts":
/*!**********************************!*\
  !*** ./src/pages/api/graphql.ts ***!
  \**********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _apollo_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @apollo/server */ \"@apollo/server\");\n/* harmony import */ var _as_integrations_next__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @as-integrations/next */ \"@as-integrations/next\");\n/* harmony import */ var _as_integrations_next__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_as_integrations_next__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var graphql_tag__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql-tag */ \"graphql-tag\");\n/* harmony import */ var graphql_tag__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(graphql_tag__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _lib_posts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/posts */ \"(api)/./src/lib/posts.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_apollo_server__WEBPACK_IMPORTED_MODULE_0__, _lib_posts__WEBPACK_IMPORTED_MODULE_3__]);\n([_apollo_server__WEBPACK_IMPORTED_MODULE_0__, _lib_posts__WEBPACK_IMPORTED_MODULE_3__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\nconst typeDefs = (0,graphql_tag__WEBPACK_IMPORTED_MODULE_2__.gql)`\n  type PostFields {\n    slug: String!\n  }\n\n  type PostFrontmatter {\n    date: String!\n    title: String!\n    tags: [String!]!\n    featuredImage: String\n    category: String\n  }\n\n  type Post {\n    id: String!\n    excerpt(length: Int): String!\n    fields: PostFields!\n    frontmatter: PostFrontmatter!\n    rawMarkdownBody: String!\n  }\n\n  type GroupEdge {\n    node: Post!\n  }\n\n  type Group {\n    fieldValue: String!\n    totalCount: Int!\n    edges: [GroupEdge!]!\n  }\n\n  type MarkdownRemark {\n    edges: [GroupEdge!]!\n    group: [Group!]!\n  }\n\n  type Query {\n    allMarkdownRemark: MarkdownRemark!\n  }\n`;\nconst resolvers = {\n    Query: {\n        allMarkdownRemark: async ()=>{\n            try {\n                const posts = await (0,_lib_posts__WEBPACK_IMPORTED_MODULE_3__.getAllPosts)();\n                console.log('Posts loaded:', posts.length);\n                const edges = posts.map((post)=>({\n                        node: {\n                            id: post.fields.slug,\n                            excerpt: post.rawMarkdownBody.replace(/!\\[.*?\\]\\(.*?\\)/g, '').replace(/<[^>]*>/g, '').replace(/[#*`_~]/g, '').replace(/\\n+/g, ' ').replace(/\\s+/g, ' ').trim().slice(0, 300) + '...',\n                            fields: post.fields,\n                            frontmatter: {\n                                ...post.frontmatter,\n                                date: new Date(post.frontmatter.date).toISOString()\n                            },\n                            rawMarkdownBody: post.rawMarkdownBody\n                        }\n                    }));\n                const tagGroups = posts.reduce((acc, post)=>{\n                    post.frontmatter.tags.forEach((tag)=>{\n                        if (!acc[tag]) {\n                            acc[tag] = {\n                                fieldValue: tag,\n                                totalCount: 0,\n                                edges: []\n                            };\n                        }\n                        acc[tag].totalCount++;\n                        acc[tag].edges.push({\n                            node: {\n                                id: post.fields.slug,\n                                excerpt: post.rawMarkdownBody.slice(0, 200),\n                                fields: post.fields,\n                                frontmatter: {\n                                    ...post.frontmatter,\n                                    date: new Date(post.frontmatter.date).toISOString()\n                                },\n                                rawMarkdownBody: post.rawMarkdownBody\n                            }\n                        });\n                    });\n                    return acc;\n                }, {});\n                const result = {\n                    edges,\n                    group: Object.values(tagGroups)\n                };\n                console.log('GraphQL response:', {\n                    edgesCount: edges.length,\n                    groupCount: Object.keys(tagGroups).length,\n                    samplePost: edges[0]?.node.frontmatter\n                });\n                return result;\n            } catch (error) {\n                console.error('GraphQL resolver error:', error);\n                throw error;\n            }\n        }\n    },\n    Post: {\n        excerpt: (parent, args)=>{\n            if (!args.length) return parent.excerpt;\n            return parent.excerpt.slice(0, args.length);\n        }\n    }\n};\nconst server = new _apollo_server__WEBPACK_IMPORTED_MODULE_0__.ApolloServer({\n    typeDefs,\n    resolvers\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_as_integrations_next__WEBPACK_IMPORTED_MODULE_1__.startServerAndCreateNextHandler)(server));\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFNO1FBQzVDO0lBQ0Y7QUFDRjtBQUVBLE1BQU1zQyxTQUFTLElBQUlqRCx3REFBWUEsQ0FBQztJQUM5Qkk7SUFDQUM7QUFDRjtBQUVBLGlFQUFlSixzRkFBK0JBLENBQUNnRCxPQUFPQSxFQUFBIiwic291cmNlcyI6WyIvVXNlcnMvamVsbHBkL0RvY3VtZW50cy9HaXRIdWIvamVsbF9nYXRzYnlfYmxvZy9zcmMvcGFnZXMvYXBpL2dyYXBocWwudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBvbGxvU2VydmVyIH0gZnJvbSAnQGFwb2xsby9zZXJ2ZXInXG5pbXBvcnQgeyBzdGFydFNlcnZlckFuZENyZWF0ZU5leHRIYW5kbGVyIH0gZnJvbSAnQGFzLWludGVncmF0aW9ucy9uZXh0J1xuaW1wb3J0IHsgZ3FsIH0gZnJvbSAnZ3JhcGhxbC10YWcnXG5pbXBvcnQgeyBnZXRBbGxQb3N0cyB9IGZyb20gJ0AvbGliL3Bvc3RzJ1xuXG5jb25zdCB0eXBlRGVmcyA9IGdxbGBcbiAgdHlwZSBQb3N0RmllbGRzIHtcbiAgICBzbHVnOiBTdHJpbmchXG4gIH1cblxuICB0eXBlIFBvc3RGcm9udG1hdHRlciB7XG4gICAgZGF0ZTogU3RyaW5nIVxuICAgIHRpdGxlOiBTdHJpbmchXG4gICAgdGFnczogW1N0cmluZyFdIVxuICAgIGZlYXR1cmVkSW1hZ2U6IFN0cmluZ1xuICAgIGNhdGVnb3J5OiBTdHJpbmdcbiAgfVxuXG4gIHR5cGUgUG9zdCB7XG4gICAgaWQ6IFN0cmluZyFcbiAgICBleGNlcnB0KGxlbmd0aDogSW50KTogU3RyaW5nIVxuICAgIGZpZWxkczogUG9zdEZpZWxkcyFcbiAgICBmcm9udG1hdHRlcjogUG9zdEZyb250bWF0dGVyIVxuICAgIHJhd01hcmtkb3duQm9keTogU3RyaW5nIVxuICB9XG5cbiAgdHlwZSBHcm91cEVkZ2Uge1xuICAgIG5vZGU6IFBvc3QhXG4gIH1cblxuICB0eXBlIEdyb3VwIHtcbiAgICBmaWVsZFZhbHVlOiBTdHJpbmchXG4gICAgdG90YWxDb3VudDogSW50IVxuICAgIGVkZ2VzOiBbR3JvdXBFZGdlIV0hXG4gIH1cblxuICB0eXBlIE1hcmtkb3duUmVtYXJrIHtcbiAgICBlZGdlczogW0dyb3VwRWRnZSFdIVxuICAgIGdyb3VwOiBbR3JvdXAhXSFcbiAgfVxuXG4gIHR5cGUgUXVlcnkge1xuICAgIGFsbE1hcmtkb3duUmVtYXJrOiBNYXJrZG93blJlbWFyayFcbiAgfVxuYFxuXG5jb25zdCByZXNvbHZlcnMgPSB7XG4gIFF1ZXJ5OiB7XG4gICAgYWxsTWFya2Rvd25SZW1hcms6IGFzeW5jICgpID0+IHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHBvc3RzID0gYXdhaXQgZ2V0QWxsUG9zdHMoKVxuICAgICAgICBjb25zb2xlLmxvZygnUG9zdHMgbG9hZGVkOicsIHBvc3RzLmxlbmd0aClcblxuICAgICAgICBjb25zdCBlZGdlcyA9IHBvc3RzLm1hcCgocG9zdCkgPT4gKHtcbiAgICAgICAgICBub2RlOiB7XG4gICAgICAgICAgICBpZDogcG9zdC5maWVsZHMuc2x1ZyxcbiAgICAgICAgICAgIGV4Y2VycHQ6XG4gICAgICAgICAgICAgIHBvc3QucmF3TWFya2Rvd25Cb2R5XG4gICAgICAgICAgICAgICAgLnJlcGxhY2UoLyFcXFsuKj9cXF1cXCguKj9cXCkvZywgJycpXG4gICAgICAgICAgICAgICAgLnJlcGxhY2UoLzxbXj5dKj4vZywgJycpXG4gICAgICAgICAgICAgICAgLnJlcGxhY2UoL1sjKmBffl0vZywgJycpXG4gICAgICAgICAgICAgICAgLnJlcGxhY2UoL1xcbisvZywgJyAnKVxuICAgICAgICAgICAgICAgIC5yZXBsYWNlKC9cXHMrL2csICcgJylcbiAgICAgICAgICAgICAgICAudHJpbSgpXG4gICAgICAgICAgICAgICAgLnNsaWNlKDAsIDMwMCkgKyAnLi4uJyxcbiAgICAgICAgICAgIGZpZWxkczogcG9zdC5maWVsZHMsXG4gICAgICAgICAgICBmcm9udG1hdHRlcjoge1xuICAgICAgICAgICAgICAuLi5wb3N0LmZyb250bWF0dGVyLFxuICAgICAgICAgICAgICBkYXRlOiBuZXcgRGF0ZShwb3N0LmZyb250bWF0dGVyLmRhdGUpLnRvSVNPU3RyaW5nKClcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICByYXdNYXJrZG93bkJvZHk6IHBvc3QucmF3TWFya2Rvd25Cb2R5XG4gICAgICAgICAgfVxuICAgICAgICB9KSlcblxuICAgICAgICBjb25zdCB0YWdHcm91cHMgPSBwb3N0cy5yZWR1Y2UoKGFjYywgcG9zdCkgPT4ge1xuICAgICAgICAgIHBvc3QuZnJvbnRtYXR0ZXIudGFncy5mb3JFYWNoKCh0YWcpID0+IHtcbiAgICAgICAgICAgIGlmICghYWNjW3RhZ10pIHtcbiAgICAgICAgICAgICAgYWNjW3RhZ10gPSB7XG4gICAgICAgICAgICAgICAgZmllbGRWYWx1ZTogdGFnLFxuICAgICAgICAgICAgICAgIHRvdGFsQ291bnQ6IDAsXG4gICAgICAgICAgICAgICAgZWRnZXM6IFtdXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGFjY1t0YWddLnRvdGFsQ291bnQrK1xuICAgICAgICAgICAgYWNjW3RhZ10uZWRnZXMucHVzaCh7XG4gICAgICAgICAgICAgIG5vZGU6IHtcbiAgICAgICAgICAgICAgICBpZDogcG9zdC5maWVsZHMuc2x1ZyxcbiAgICAgICAgICAgICAgICBleGNlcnB0OiBwb3N0LnJhd01hcmtkb3duQm9keS5zbGljZSgwLCAyMDApLFxuICAgICAgICAgICAgICAgIGZpZWxkczogcG9zdC5maWVsZHMsXG4gICAgICAgICAgICAgICAgZnJvbnRtYXR0ZXI6IHtcbiAgICAgICAgICAgICAgICAgIC4uLnBvc3QuZnJvbnRtYXR0ZXIsXG4gICAgICAgICAgICAgICAgICBkYXRlOiBuZXcgRGF0ZShwb3N0LmZyb250bWF0dGVyLmRhdGUpLnRvSVNPU3RyaW5nKClcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHJhd01hcmtkb3duQm9keTogcG9zdC5yYXdNYXJrZG93bkJvZHlcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgICB9KVxuICAgICAgICAgIHJldHVybiBhY2NcbiAgICAgICAgfSwge30gYXMgUmVjb3JkPHN0cmluZywgYW55PilcblxuICAgICAgICBjb25zdCByZXN1bHQgPSB7XG4gICAgICAgICAgZWRnZXMsXG4gICAgICAgICAgZ3JvdXA6IE9iamVjdC52YWx1ZXModGFnR3JvdXBzKVxuICAgICAgICB9XG5cbiAgICAgICAgY29uc29sZS5sb2coJ0dyYXBoUUwgcmVzcG9uc2U6Jywge1xuICAgICAgICAgIGVkZ2VzQ291bnQ6IGVkZ2VzLmxlbmd0aCxcbiAgICAgICAgICBncm91cENvdW50OiBPYmplY3Qua2V5cyh0YWdHcm91cHMpLmxlbmd0aCxcbiAgICAgICAgICBzYW1wbGVQb3N0OiBlZGdlc1swXT8ubm9kZS5mcm9udG1hdHRlclxuICAgICAgICB9KVxuXG4gICAgICAgIHJldHVybiByZXN1bHRcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ0dyYXBoUUwgcmVzb2x2ZXIgZXJyb3I6JywgZXJyb3IpXG4gICAgICAgIHRocm93IGVycm9yXG4gICAgICB9XG4gICAgfVxuICB9LFxuICBQb3N0OiB7XG4gICAgZXhjZXJwdDogKHBhcmVudDogYW55LCBhcmdzOiB7IGxlbmd0aD86IG51bWJlciB9KSA9PiB7XG4gICAgICBpZiAoIWFyZ3MubGVuZ3RoKSByZXR1cm4gcGFyZW50LmV4Y2VycHRcbiAgICAgIHJldHVybiBwYXJlbnQuZXhjZXJwdC5zbGljZSgwLCBhcmdzLmxlbmd0aClcbiAgICB9XG4gIH1cbn1cblxuY29uc3Qgc2VydmVyID0gbmV3IEFwb2xsb1NlcnZlcih7XG4gIHR5cGVEZWZzLFxuICByZXNvbHZlcnNcbn0pXG5cbmV4cG9ydCBkZWZhdWx0IHN0YXJ0U2VydmVyQW5kQ3JlYXRlTmV4dEhhbmRsZXIoc2VydmVyKVxuIl0sIm5hbWVzIjpbIkFwb2xsb1NlcnZlciIsInN0YXJ0U2VydmVyQW5kQ3JlYXRlTmV4dEhhbmRsZXIiLCJncWwiLCJnZXRBbGxQb3N0cyIsInR5cGVEZWZzIiwicmVzb2x2ZXJzIiwiUXVlcnkiLCJhbGxNYXJrZG93blJlbWFyayIsInBvc3RzIiwiY29uc29sZSIsImxvZyIsImxlbmd0aCIsImVkZ2VzIiwibWFwIiwicG9zdCIsIm5vZGUiLCJpZCIsImZpZWxkcyIsInNsdWciLCJleGNlcnB0IiwicmF3TWFya2Rvd25Cb2R5IiwicmVwbGFjZSIsInRyaW0iLCJzbGljZSIsImZyb250bWF0dGVyIiwiZGF0ZSIsIkRhdGUiLCJ0b0lTT1N0cmluZyIsInRhZ0dyb3VwcyIsInJlZHVjZSIsImFjYyIsInRhZ3MiLCJmb3JFYWNoIiwidGFnIiwiZmllbGRWYWx1ZSIsInRvdGFsQ291bnQiLCJwdXNoIiwicmVzdWx0IiwiZ3JvdXAiLCJPYmplY3QiLCJ2YWx1ZXMiLCJlZGdlc0NvdW50IiwiZ3JvdXBDb3VudCIsImtleXMiLCJzYW1wbGVQb3N0IiwiZXJyb3IiLCJQb3N0IiwicGFyZW50IiwiYXJncyIsInNlcnZlciJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/graphql.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fgraphql&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Fgraphql.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();